session: 1/10/2024

to do:
find a site in distress: bridge, rooftop, hallway, family house, etc
distress means many things --> underuse, bad location, ...
--------------------
before you go:
	 --> cellular and location is turned on on gsm
got here and try to map your entire route.
	--> lots of images of misuse, leak, anoying stopligh.  30 + images. negative or positive.
-------------------

photogrammetry video:
	--> 1 minute video on cellphone
	--> tips: smooth video, no sudden zoom ins or movements
		no reflecive surfaces like glass, etc
		a lot of overlap, dont zoom in to much
		walk around, dont stand still and rotate, this will not work
		most tutorials cover images, but dont bother, film is also fine
		a (very tragic) example of a good photogrammetry video would be something like this
		https://www.youtube.com/watch?v=sBw0hZBlOu0

------------------
go over the rest of the houdini foundations file play around with some of the nodes, params etc

--------------------------------------------------------------------------------------------------

session: 2/10/2024


planning

houdini recap?

site discussion, 
	images worked?
	video worked?
	kml/trajectory worked?
	discuss strategy

check image metadata   		-> magick identify -verbose "image.jpg"
*tip: convert images 		-> magick mogrify -format .jpg *.HEIC

extract frames from video   	-> ffmpeg -i input.mp4 -vf fps=1 -q:v 1 output_%04d.jpg

*top: download images from youtube  -> 


		from pathlib import Path
		from pytube import YouTube

		imgpath = Path("project/images")
		imgpath.mkdir(exist_ok=True)
		url = "https://www.youtube.com/watch?v=sBw0hZBlOu0"
		yt = YouTube(url)
		video = yt.streams.get_by_itag(157)
		video.download("./")
		for i in yt.streams:
			print(i)



download realitycapture and do photogrammetry

load in houdini and extract camera's ->

		for(int i =0; i < npoints(0); i++){
		    if(i % 8 ==0){
		    
		    
		    // calc center pos and add point
		    vector posA = lerp(point(0,"P",i-6),point(0,"P",i-8),0.5);
		    int newpnt = addpoint(0, posA);
		    
		    // calculate the normal vector
		    vector posB = lerp(point(0,"P",i-1),point(0,"P",i-3),0.5);
		   
		    vector N = posB - posA;
		    setpointattrib(0,"N", newpnt,- N *100, "set");
		    setpointattrib(0,"up", newpnt, up, "set");
		    
		    } 
		}


form groups



